# У вас есть словарь игроков, которые участвовали в трёх видах спорта. 
# В словаре хранятся пары «Ф. И. — очки»:

 

# players = {

#     ("Will", "Smith"): (10, 5, 13),

#     ("Bob", "Robbin"): (7, 5, 14),

#     ("Rob", "Bobbin"): (12, 8, 2)

# }
# print([sum((key,value),())for key, value in players.items()])
# results = []
# for key, value in players.items():
#     sum = key + value + ()
#     results.append(sum)
# print(results)


 

# Один программист попросил нас для своей базы отправить ему немного другой вариант 
# хранения этой информации.

# Напишите программу, которая объединяет ключ словаря со значением в 
# один кортеж, и выведите результат на экран. 
# Постарайтесь использовать как можно более эффективное решение.

# Результат работы программы:

# [('Will', 'Smith', 10, 5, 13), ('Bob', 'Robbin', 7, 5, 14),
#  ('Rob', 'Bobbin', 12, 8, 2)]

# Задача 2

# Есть список из 10 случайных чисел. Напишите программу, 
# которая делит эти числа на пары кортежей внутри списка, и выведите результат на экран.

# Дополнительно: решите задачу несколькими способами.

# Пример:

# Оригинальный список: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# Новый список: [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9)]

# ls = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# ls2 =dict()
# for x,i in enumerate(ls):
#     if x % 2 == 0:
#         ls2[x]= i
# print(ls2)
# results =[(i_key, i_index + 1) for i_key, i_index in ls2.items()]
# print(results)
    

# Задача 3

#  Посчитайте, сколько раз символ "O"и "А" встречается в строке.   
# "ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО НРАВСТВЕННО, НАДО ЗНАТЬ, 
# ЧТО БЕЗНРАВСТВЕННО; ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО ДЕЛАТЬ, 
# НАДО ЗНАТЬ, ЧЕГО НЕ ДОЛЖНО ДЕЛАТЬ"
# string = "ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО НРАВСТВЕННО, НАДО ЗНАТЬ, ЧТО БЕЗНРАВСТВЕННО; ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО ДЕЛАТЬ, НАДО ЗНАТЬ, ЧЕГО НЕ ДОЛЖНО ДЕЛАТЬ"
# count_o = 0
# count_a = 0

# for x in string:
#     if x == "О":
#         count_o += 1
#     elif x == "А":
#         count_a += 1
#     else:
#         pass
# print(count_o - 1,count_a - 1)
# Задача 4 

#     Переделайте прошлый калькулятор
#     Сделайте так, чтобы калькулятор спрашивал постоянно данные для совершения операций 
# в калькулятор
#     Если пользователь вводит букву q то калькулятор должен завершаться 
# (для хардкора, если пользователь введет пустую строку, вывести строку 
# "Нет ничего приятнее, чем знание о твоих знаниях!


# # Выполнение математической операции в зависимости от введенного оператора
# while True:
#     num1 = float(input("Введите первое число: "))
#     operator = input("Введите оператор (+, -, *, /): ")
#     num2 = float(input("Введите второе число: "))
#     if operator == 'q':
#         print("end")
#         break
#     elif operator == '+':
#         result = num1 + num2
#         print(result)
#     elif operator == '-':
#         result = num1 - num2
#         print(result)
#     elif operator == '*':
#         result = num1 * num2
#         print(result)
#     elif operator == '/':
#         # Проверка деления на ноль
#         if num2 != 0:
#             result = num1 / num2
#             print(result)
#         else:
#             print("Ошибка: Деление на ноль недопустимо!")
#             exit()  # Выход из программы в случае ошибки деления на ноль
#     else:
#         print("Ошибка: Некорректный оператор!")
#         exit()  # Выход из программы в случае ошибочного ввода оператора


# Задача 5. (дополнительно)

# Дополнительно: попробуйте реализовать программу через цикл While, 
        # "стоп-слово" для выхода из цикла "Выход"

# Мы решили написать приложение для удобного прослушивания музыки,
        #  но наши песни хранятся в виде словаря. Каждая песня состоит
        #  из названия и продолжительности с точностью до долей минут.

 

# violator_songs = {

#     'World in My Eyes': 4.86,

#     'Sweetest Perfection': 4.43,

#     'Personal Jesus': 4.56,

#     'Halo': 4.9,

#     'Waiting for the Night': 6.07,

#     'Enjoy the Silence': 4.20,

#     'Policy of Truth': 4.76,

#     'Blue Dress': 4.29,

#     'Clean': 5.83

# }
# count_song = int(input('Кол-во песен: '))

# print(violator_songs.values())
# counter = 0
# sum = 0
# while counter < count_song:
#     if counter < count_song:
#         name_song = input('Введите название песни: ')
#         time_song = violator_songs.get(name_song)
#     sum += time_song
#     counter +=1
# print(f'Общее время звучания песен: {sum} минут')

# Напишите программу, которая запрашивает у пользователя 
# количество песен из списка и затем названия этих песен, 
# а на экран выводит общее время их звучания.

 

# Пример:

# Сколько песен выбрать? 3

# Название 1 песни: Halo

# Название 2 песни: Enjoy the Silence

# Название 3 песни: Clean

 

# Общее время звучания песен: 14.93 минут

# Задача 6. (дополнительно)

 

# Асан помимо программирования также увлекается и географией,
#  поэтому он решил связать эти две области и написать для своего проекта 
# небольшую программу-навигатор.

 

# Пользователь вводит количество стран N, а затем N раз вводит страну и 
# города, которые в этой стране находятся, в одну строку. Затем пользователь 
# вводит три названия городов. Реализуйте такую программу и для каждого из трёх
#  городов укажите, в какой стране он находится. Если такого города нет, то выведите 
# соответствующее сообщение.
# count_country = int(input('Введите кол-во стран: '))
# country_city= {}
# count = 0

# cities = list()

# while count < count_country:
#     count_c = 0
#     country = input('Введите страну: ')
#     count_city = int(input('Введите кол-во городов: '))
    
#     while count_c < count_city:
#         city = input('Введите города относяйщийся к стране: ')
#         cities.append(city)
#         country_city[country] = cities
#         count_c += 1
#     country_city[country] = cities
#     cities = []
#     count += 1
#     print(f'Страны и города: {country_city}')

# choose_city = input("Введите город:  ")
# find_country = next((country for country, cities in country_city.items() if choose_city in cities), None)

# if find_country:
#         print(f'Город {choose_city} расположен в стране {find_country}')
# else:
#         print(f'По городу {choose_city} данных нет')


# print(country_city)

# Пример: 

# Кол-во стран: 2

# 1 страна: Кыргызстан Бишкек Кант Каракол

# 2 страна: Германия Берлин Лейпциг Мюнхен

 

# 1 город: Москва

# Город Москва расположен в стране Россия.

 

# 2 город: Мюнхен

# Город Мюнхен расположен в стране Германия.

 

# 3 город: Рим

# По городу Рим данных нет.

def str_count(strng, letter):
    count = 0
    for lets in strng:
        if letter in lets:
                # print(letter)
                count +=1
        # else:
        #         return 0
    return print(count)
(str_count('hello', 'l'), 2)
(str_count('codewars', 'c'), 1)
(str_count('ggggg', 'g'), 5)
(str_count('hello world', 'o'), 2)
(str_count('', 'z'), 0)
