# адача 1. Сумма чисел (10 баллов)

# Напишите функцию summa_n, которая принимает
#  одно целое положительное число N и выводит сумму всех чисел от 1 до N включительно.

# def summa_n(n:int):
#     sums = 0
#     for i in range(1,n+1):
#             sums += i
#     return print(f'Я знаю,что сумма чисел от 1 до {n} равна {sums}')
# while True:
#     guess = input('vvedite chislo: ')
#     if guess == "выход":
#         break
#     else:
#          guess = int(guess)
#          print(summa_n(guess))
      


# Пример работы программы:

# Введите число: 5

# Вывести сообщение: Я знаю, что сумма чисел от 1 до 5 равна 15

# Реализуйте через цикл while, для выхода из цикла пользователь должен ввести "выход" (5 баллов)

# Задача 2. Функция в функции (15 баллов)

# Асан проходит специальный тест по программированию. 
# У него всё шло хорошо, пока он не наткнулся на тему «Функции». Задание звучит так:

# Основная ветка программы, не считая заголовков функций,
#  состоит из одной строки кода. Это вызов функции test(). 
# В ней запрашивается на ввод целое число. Если оно положительное, 
# то вызывается функция positive(), тело которой содержит команду вывода на 
# экран слова «Положительное». Если число отрицательное, то вызывается функция negative(),
#  её тело содержит выражение вывода на экран слова «Отрицательное».
# def positive(positive) -> str:
#     return print("Положительное")
# def negatives(negative) -> str:
#     return print("негатив")
# def test(test_:int):
#     if test_ >= 0:
#         print(positive(0))
#     else:
#         print(negatives(0))

#     return 
# print(test(0))

            

            
# Задача 3. Площади (15 баллов)

# Муниципалитет хочет построить необычный парк в одном из районов города.
#  Власти остановились на трёх вариантах: изображение на карте в виде круга,
#  прямоугольника или треугольника. Однако им также нужно понять, какую площадь
#  будет занимать тот или иной вариант при разных значениях.

# Напишите программу, которая в зависимости от выбора пользователя вычисляет 
# площадь круга, прямоугольника или треугольника. Для вычисления площади каждой фигуры должна быть написана отдельная функция. (Формулы нахождения площадей попробуйте найти в интернете)))
# import math
# def ares_round(n):
#     return math.pi * n**2
# def calculate_rectangle_area(length, width):
#     return length * width

# def calculate_triangle_area(base, height):
#     return 0.5 * base * height
# print(ares_round(10))
# print(calculate_rectangle_area(5,10))
# print(calculate_triangle_area(10,8))
    
# Задача 4. Число наоборот (15 баллов)

# Вводится число. Реализуйте функцию, которая принимает в качестве параметра число, 
# переворачивает его и выводит на экран.

# def reverse_chislo(guess) -> None:
#     guess=str(guess)
#     return guess[::-1]
# while True:
#     guess = input('VVedite ')

#     if guess == '0':
#         print('Vyxod')
#         break
#     else:
#         print(reverse_chislo(guess))
        


# Пример:

# Введите число: 1234

# Число наоборот: 4321

# Введите число: 1993

# Число наоборот: 3991

# Введите число: 0

# Программа завершена! 

# Реализовать через цикл while, соответственно для выхода из цикла, пользователь должен будет ввести 0 и вывести сообщение "Программа завершена!" (5 баллов)

# Дополнительно: добейтесь такого вывода чисел, в начале которых идут нули

 

# Введите число: 1000

# Число наоборот: 0001

# Задача 5. Копейки (20 баллов)

# На одном складе нашли старые кассовые аппараты, в которых, как выяснилось, 
# до сих пор остались лежать копейки разного достоинства. Даже однокопеечные есть! 
# Все найденные копейки собрали в кучу и закинули в специальное устройство, которое
#  сканирует все монеты и в результате выдаёт, сколько всё это будет в рублях.

# Напишите функцию, которая будет считать количество мелких монеток достоинством в 
# 1, 5, 10 и 50 копеек. Функция должна выводить общую сумму.

# def count_coines(one_kopeika,five_kopeika,ten_kopeika,fifty_kopeika):
#     res_one_kopeika = one_kopeika * 0.01
#     res_five_kopeika = five_kopeika * 0.05
#     res_ten_kopeika = ten_kopeika * 0.1
#     res_fifty_kopeika = fifty_kopeika * 0.5
#     res_sum = res_one_kopeika + res_five_kopeika + res_ten_kopeika +res_fifty_kopeika
#     return res_sum
# one_kopeika = 3
# five_kopeika = 6
# ten_kopeika = 7
# fifty_kopeika = 2
# print(count_coines(one_kopeika,five_kopeika,ten_kopeika,fifty_kopeika))

# Пример:

# Монет по 1 копейке: 3

# Монет по 5 копеек: 6

# Монет по 10 копеек: 7

# Монет по 50 копеек: 2

# Всего у нас 2.03 рубля

# Задава 6. Калькулятор (продолжение) (15 баллов)

# Реализуйте калькулятор из прошлого д/з через функцию
def calculator_time(num1,operator,num2):
    
    if operator == 'q':
        print("end")
    elif operator == '+':
        result = num1 + num2
        print(result)
    elif operator == '-':
        result = num1 - num2
        print(result)
    elif operator == '*':
        result = num1 * num2
        print(result)
    elif operator == '/':
        # Проверка деления на ноль
        if num2 != 0:
            result = num1 / num2
            print(result)
        else:
            print("Ошибка: Деление на ноль недопустимо!")
            exit()  # Выход из программы в случае ошибки деления на ноль
    else:
        print("Ошибка: Некорректный оператор!")
        exit()  # Выход из программы в случае ошибочного ввода оператора
    return exit
num1 = float(input("Введите первое число: "))
operator = input("Введите оператор (+, -, *, /): ")
num2 = float(input("Введите второе число: "))
print(calculator_time(num1,operator,num2))